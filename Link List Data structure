class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }



public class LinkedList {
    Node head;

    public LinkedList insertAtEnd(LinkedList list,int dt){
    Node newNode = new Node(dt);
            
            if(list.head == null)
            {
                list.head=newNode;
            }
            else{
                Node last =list.head;
                  while(last.next != null)
                    {
                      last = last.next;
                    } 
                    last.next = newNode;
                }
            return list;

        }

public void insertAtFront(LinkedList list,int dta)
{
    Node nNode = new Node(dta);

    nNode.next=head;
    head=nNode;
}


/* 
public void insertAfter(int after,int value)
{
Node nNode = new Node(value);

    if(head == null)
    {
        System.out.println("Yuo can't use the insertAfter method");

    }
    else{
        Node crntNode = head;
        while(crntNode.next != null)
        {
           if(crntNode.data == after){
            nNode.next = crntNode.next;
            crntNode.next =nNode;
           }
        }
}
*/


        public void display(LinkedList lsst){
                  Node crntNode=head;
                  while(crntNode != null)
                  {
                  System.out.println(crntNode.data + "");
                  crntNode = crntNode.next;
                  }
        }
    }





public class Demolist {
    public static void main(String []args){
    LinkedList lst = new LinkedList();

    lst.insertAtEnd(lst, 6);
    lst.insertAtEnd(lst, 11);
    lst.insertAtEnd(lst, 4);

    lst.insertAtFront(lst, 5);
    lst.insertAtFront(lst, 12);



    lst.display(lst);
}
}

